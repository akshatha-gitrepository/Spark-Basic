log4j.rootLogger=INFO, stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd'T'HH:mm:ss} %-5p [%c{1}] - %m%n

####### Spark specific #######

# Set the default spark-shell log level to WARN. When running the spark-shell, the
# log level for this class is used to overwrite the root logger's log level, so that
# the user can have different defaults for the shell and regular Spark apps.
log4j.logger.org.apache.spark.repl.Main=WARN

# Settings to quiet third party logs that are too verbose
# the shaded packages have the namespace org.spark_project in 2.4.4, see https://github.com/apache/spark/blob/v2.4.4/pom.xml
log4j.logger.org.sparkproject.jetty=WARN
log4j.logger.org.sparkproject.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark=WARN
#log4j.logger.org.apache.spark.sql.execution.streaming=DEBUG
log4j.logger.org.apache.hadoop=WARN
log4j.logger.hive.ql.metadata.hive=WARN
log4j.logger.org.apache.parquet=ERROR
# Shut up kafka info logs
log4j.logger.org.apache.kafka.clients.consumer=WARN
log4j.logger.org.apache.kafka.common.utils=WARN
log4j.logger.org.apache.kafka.clients.consumer.internals.Fetcher=WARN